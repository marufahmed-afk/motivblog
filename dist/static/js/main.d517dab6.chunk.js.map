{"version":3,"sources":["images/leftArrow.svg","images/rightArrow.svg","images/blueCircle.svg","config/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/blogs/BlogShowcase.js","components/homepage/Homepage.js","components/blogs/BlogCard.js","components/blogs/BlogList.js","components/blogs/BlogContent.js","store/actions/blogActions.js","components/auth/Login.js","components/auth/SignUp.js","components/blogs/CreateBlog.js","components/auth/Profile.js","components/homepage/Notifications.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/blogReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","connect","ref","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","activeClassName","onClick","SignedOutLinks","state","links","uid","BlogShowcase","index","handleNext","setState","blogs","length","console","log","handlePrevious","Math","abs","this","src","leftArrow","alt","id","key","url","title","require","Component","Homepage","compose","ordered","firestoreConnect","collection","BlogCard","blog","BlogList","filter","handleFilter","e","target","href","map","likes","orderBy","BlogContent","handleLike","likeBlog","match","params","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","content","ownProps","data","updatedLikes","signedInUser","indexOf","item","updatedPost","doc","set","Login","email","password","handleChange","value","handleSubmit","preventDefault","signIn","authError","onSubmit","onChange","placeholder","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","confirm","image","signUp","handleImageChange","files","handleUpload","imageName","name","put","on","snapshot","round","bytesTransferred","totalBytes","error","child","getDownloadURL","newUser","createUserWithEmailAndPassword","resp","user","occupation","CreateBlog","progress","createBlog","history","push","openForm","document","getElementById","style","display","closeForm","profile","authorId","add","Date","users","editAbout","about","find","updatedAbout","useState","setAbout","notificaitons","notifications","limit","noti","time","fromNow","App","exact","path","component","Profile","Notifications","Boolean","window","location","hostname","initState","authReducer","action","message","blogReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d517dab6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leftArrow.d62ae36e.svg\";","module.exports = __webpack_public_path__ + \"static/media/rightArrow.e2d0e91a.svg\";","module.exports = __webpack_public_path__ + \"static/media/blueCircle.045ac313.svg\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\nvar firebaseConfig = {\r\napiKey: \"AIzaSyAjySGNlkYENHemPQNqjvzK88I82CCmImk\",\r\nauthDomain: \"motivblog-e93b8.firebaseapp.com\",\r\ndatabaseURL: \"https://motivblog-e93b8.firebaseio.com\",\r\nprojectId: \"motivblog-e93b8\",\r\nstorageBucket: \"motivblog-e93b8.appspot.com\",\r\nmessagingSenderId: \"778659743316\",\r\nappId: \"1:778659743316:web:49a32c2b2ae2062c9d0fc1\",\r\nmeasurementId: \"G-VZ2PV5N7DB\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\nexport const storageRef = storage.ref();","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) =>{\r\n    return(\r\n        <div className=\"navBar\">\r\n            <ul>\r\n                <li><NavLink to=\"/\" activeClassName=\"null\">Home</NavLink></li>\r\n                <li><NavLink to=\"/blogs\" activeClassName=\"active\">Posts</NavLink></li>\r\n                <li><NavLink to=\"/profile\" activeClassName=\"active\">Profile</NavLink></li>\r\n                <li><NavLink to=\"/notifications\" activeClassName=\"active\">Notifications</NavLink></li>\r\n                <li><NavLink to=\"/login\" activeClassName=\"active\" className='login' onClick={props.signOut}>Logout</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","import { firestore } from '../../config/fbConfig'\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR',err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        }).catch(err => {\r\n            dispatch({ type:'SIGOUT_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                occupation: newUser.occupation,\r\n                url: newUser.url\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type:'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type:'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const editAbout = (users, about) =>{ \r\n\r\n    return (dispatch, getState)  => {\r\n        const signedInUser = getState().firebase.auth.uid\r\n\r\n        const user = users.find(user => {\r\n            \r\n            return user.id === signedInUser\r\n        })\r\n\r\n        console.log(user);\r\n        \r\n        const updatedAbout = {\r\n            ...user,\r\n            about: about\r\n        } \r\n\r\n\r\n        firestore.collection('users')\r\n            .doc(signedInUser) \r\n            .set(updatedAbout).then(() =>{dispatch({type:'EDIT_ABOUT_SUCCESS', about});\r\n                }).catch((err) => {dispatch({type:'EDIT_ABOUT_ERROR', err});\r\n            })\r\n    };\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <div className=\"navBar\">\r\n            <ul>\r\n                <li><NavLink to=\"/\" activeClassName=\"null\">Home</NavLink></li>\r\n                <li><NavLink to=\"/blogs\" activeClassName=\"active\">Posts</NavLink></li>\r\n                <li><NavLink to=\"/notifications\" activeClassName=\"active\">Notifications</NavLink></li>\r\n                <li><NavLink to=\"/login\" activeClassName=\"active\" className='login'>Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport '../../CSS/style.css'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const { auth } = props;\r\n    const links = auth.uid ? <SignedInLinks/> : <SignedOutLinks/>\r\n    return(\r\n        <nav>\r\n            <div>\r\n                <Link to='/' className='brand-logo'>MotivBlog</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    //console.log(state)\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport leftArrow from '../../images/leftArrow.svg'\r\n\r\n\r\nclass BlogShowcase extends Component{\r\n\r\n\r\n    state = {\r\n        index: 0\r\n    };    \r\n\r\n      \r\n    handleNext = () => {\r\n        this.setState({ index: (this.state.index + 1) % this.props.blogs.length });\r\n        console.log(this.state.index)\r\n    };\r\n    handlePrevious = () => {\r\n        this.setState({ index: Math.abs(this.state.index - 1 % this.props.blogs.length) });\r\n        console.log(this.state.index)\r\n    };\r\n\r\n    render(){\r\n        const { blogs, auth } = this.props;\r\n        if(blogs && blogs[0] != null){\r\n            return (\r\n                <div className=\"hero\">\r\n                    <div className=\"leftArrow\">\r\n                      <img onClick = {this.handlePrevious} src={leftArrow} alt=\"\"/>\r\n                    </div>\r\n        \r\n                    <Link to={'/blogs/' + blogs[this.state.index].id} key= {blogs[this.state.index].id}><img src={blogs && blogs[this.state.index].url} alt=\"\"/></Link>\r\n                    <h1>{blogs && blogs[this.state.index].title}</h1>\r\n                \r\n                    <div className=\"rightArrow\">\r\n                        <img onClick = {this.handleNext} src={require(\"../../images/rightArrow.svg\")} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"hero\">\r\n                    <h1>No Blogs Yet!</h1>\r\n                </div>\r\n            )\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default BlogShowcase\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport BlogShowcase from '../blogs/BlogShowcase'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Homepage extends Component {\r\n  render(){\r\n    const { blogs, auth } = this.props;\r\n    return (\r\n        \r\n    <main className=\"mainBlock\">\r\n\r\n      <div className=\"topPosts\">\r\n          <p>Top Posts</p>\r\n      </div>\r\n      \r\n      <BlogShowcase blogs = {blogs}/>\r\n      \r\n    </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n  blogs: state.firestore.ordered.blogs,\r\n  auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n      { collection: 'blogs' }\r\n  ])\r\n)(Homepage)\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction BlogCard({blog}) {\r\n    return (\r\n        <li className=\"post1\">\r\n                <span>{blog.title}</span>\r\n            <img src={blog.url} alt=\"\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default BlogCard\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../CSS/posts.css'\r\nimport BlogCard from './BlogCard'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass BlogList extends Component {\r\n\r\n    state = {\r\n        filter: ''\r\n    }\r\n\r\n    handleFilter = (e) =>{\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            filter: e.target.id\r\n        })\r\n    };\r\n\r\n    render(){\r\n    \r\n    const { blogs, auth } = this.props;\r\n    if(!auth.uid) return <Redirect to= '/login'/>\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"filters\">\r\n                <ul>\r\n                    <li ><a href='#' id = 'All' onClick = {this.handleFilter}>All</a></li>\r\n                    <li><Link to=\"#date\">Date</Link></li>\r\n                    <li ><a href='#' id = 'Liked' onClick = {this.handleFilter}>Liked</a></li>\r\n                    <li><Link to=\"#rating\">Rating</Link></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"posts\">\r\n                <ul>\r\n                    { blogs && blogs.map(blog =>{\r\n                        if(this.state.filter === 'Liked'){\r\n                            if(blog.likes.length >= 1){\r\n                                return(\r\n                                <Link to={'/blogs/' + blog.id} key= {blog.id}>\r\n                                    <BlogCard blog={blog}/>\r\n                                </Link>\r\n                             )\r\n                            }\r\n                        }\r\n                        else {\r\n                            return(\r\n                            \r\n                            <Link to={'/blogs/' + blog.id} key= {blog.id}>\r\n                                <BlogCard blog={blog}/>\r\n                            </Link>\r\n                        )\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n    blogs: state.firestore.ordered.blogs,\r\n    auth: state.firebase.auth\r\n    }\r\n}\r\n  \r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection:'blogs', orderBy: ['createdAt','desc']}\r\n    ])\r\n)(BlogList)\r\n","import React from 'react'\r\nimport {Component} from 'react'\r\nimport '../../CSS/singlePost.css'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport {likeBlog} from '../../store/actions/blogActions'\r\n\r\n\r\n\r\nclass  BlogContent extends Component{\r\n\r\n    handleLike = () => {\r\n        this.props.likeBlog(this.props.blog, this.props.match.params.id)\r\n    }\r\n\r\n    render(){\r\n        const { blog, auth } = this.props;\r\n        if(!auth.uid) return <Redirect to= '/login'/>\r\n        if (blog) {\r\n            return (\r\n                <div>\r\n                    <main className=\"singlePost\">\r\n                        <div className=\"container\">\r\n                            <div className=\"title\">\r\n                                <h1>{blog.title}</h1>\r\n                            </div>\r\n                            <h4>Posted by {blog.authorFirstName} {blog.authorLastName} {moment(blog.createdAt.toDate()).calendar()}</h4>\r\n                            <button className='likeBtn' onClick={this.handleLike}>Like</button>\r\n                            <p>{blog.content}</p>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <p>Loading Project</p>\r\n            )\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const id = ownProps.match.params.id;\r\n    const blogs = state.firestore.data.blogs;\r\n    const blog = blogs ? blogs[id] : null\r\n    return {\r\n        blog: blog,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {\r\n        likeBlog: (blog,id) => dispatch(likeBlog(blog,id))\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,matchDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'blogs' }\r\n    ])\r\n)(BlogContent)","import { firestore } from '../../config/fbConfig'\r\n\r\nexport const createBlog = (blog) => {\r\n    console.log(blog)\r\n    return (dispatch, getState, { getFirebase }) => {\r\n\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('blogs').add({\r\n            ...blog,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_BLOG', blog });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_BLOG_ERROR', err});\r\n        })\r\n    }\r\n};\r\n\r\nexport const likeBlog = (blog,id) =>{ \r\n\r\n    return (dispatch, getState)  => {\r\n        const signedInUser = getState().firebase.auth.uid\r\n        let updatedLikes;\r\n        if(blog.likes.indexOf(signedInUser) ===-1){  \r\n          updatedLikes = [...blog.likes, signedInUser] \r\n        } else {\r\n          updatedLikes = blog.likes.filter(item => item!==signedInUser)\r\n        }\r\n        const updatedPost = {\r\n            ...blog,\r\n            likes: updatedLikes\r\n        } \r\n\r\n        firestore.collection('blogs')\r\n            .doc(id) \r\n            .set(updatedPost).then(() =>{dispatch({type:'ADD_LIKE_SUCCESS', blog});\r\n                }).catch((err) => {dispatch({type:'ADD_LIKE_ERROR', err});\r\n            })\r\n      };\r\n}","import React, { Component } from 'react'\r\nimport '../../CSS/login.css'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to= '/blogs'/>\r\n        return (\r\n            <div>\r\n                <div className=\"loginForm\">\r\n                    <h2>Login</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} placeholder=\"Email\"/>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} placeholder=\"Password\"/>\r\n                        <button type=\"submit\">Login</button>\r\n                        <Link to=\"/signup\"><button>Sign Up</button></Link>\r\n                    </form>\r\n                    <div>\r\n                        { authError ? <p>{ authError }</p> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { Component } from 'react'\r\nimport '../../CSS/login.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\nimport { storage } from '../../config/fbConfig'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirm: '',\r\n        image: null,\r\n        url: ''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        this.props.signUp(this.state)\r\n\r\n    }\r\n    handleImageChange = e => {\r\n        if (e.target.files[0]) {\r\n          const image = e.target.files[0];\r\n          this.setState(() => ({ image }));\r\n        }\r\n    };\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const { image } = this.state;\r\n        const imageName = image.name;\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        \r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => {\r\n            // progress function ...\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n          },\r\n          error => {\r\n            // Error function ...\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            // complete function ...\r\n            storage\r\n              .ref(\"images\")\r\n              .child(image.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                this.setState({ url });\r\n                console.log(this.state);\r\n              });\r\n          }\r\n        );\r\n\r\n        this.setState(() => ({ image: imageName}));\r\n      };\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to= '/'/>\r\n        return (\r\n            <div>\r\n                <div className=\"loginForm\">\r\n                    <h2>Join Us</h2>\r\n                    <form type=\"submit\" onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} placeholder=\"First Name\"/>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} placeholder=\"Last Name\"/>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} placeholder=\"Email\"/>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} placeholder=\"Password\"/>\r\n                        <input type=\"password\" id=\"confirm\" onChange={this.handleChange} placeholder=\"Confirm Password\"/>\r\n                        <input type=\"text\" id=\"occupation\" onChange={this.handleChange} placeholder=\"Occupation\"/>\r\n                        <div className=\"file-field input-field\">\r\n                            <div className=\"btn\">\r\n                                <input type=\"file\" id=\"image\" onChange={this.handleImageChange} />\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            onClick={this.handleUpload}\r\n                            className=\"upload-btn\"\r\n                            >\r\n                            Upload\r\n                        </button>\r\n                        { this.state.url ? <button type=\"submit\">Sign Up</button> : null}\r\n                        <div>\r\n                            { authError ? <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { conenct, connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { createBlog } from '../../store/actions/blogActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { storage } from '../../config/fbConfig'\r\n\r\nclass CreateBlog extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        image: null,\r\n        url: '',\r\n        likes: '',\r\n        progress: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleImageChange = e => {\r\n        if (e.target.files[0]) {\r\n          const image = e.target.files[0];\r\n          this.setState(() => ({ image }));\r\n        }\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createBlog(this.state)\r\n        \r\n        this.props.history.push('/');\r\n        //console.log(this.props)\r\n    }\r\n\r\n    handleUpload = () => {\r\n        const { image } = this.state;\r\n        const imageName = image.name;\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        \r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => {\r\n            // progress function ...\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            this.setState({ progress });\r\n          },\r\n          error => {\r\n            // Error function ...\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            // complete function ...\r\n            storage\r\n              .ref(\"images\")\r\n              .child(image.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                this.setState({ url });\r\n                console.log(this.state);\r\n              });\r\n          }\r\n          \r\n        );\r\n\r\n        this.setState(() => ({ image: imageName}));\r\n      };\r\n\r\n    openForm = () => {\r\n        document.getElementById(\"upload-form\").style.display = \"block\";\r\n    }\r\n    closeForm = () => {\r\n        document.getElementById(\"upload-form\").style.display = \"none\";\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/login' />\r\n        return (\r\n            <div className=\"addPost\">\r\n                <p>Add Post</p>\r\n                <div className=\"addNewPost\">\r\n                    <div className='open-button' >\r\n                        <a  href='#' onClick={this.openForm}><img src={require(\"../../images/blueCircle.svg\")} alt=\"\" /></a>\r\n                    </div>\r\n                    <div className='upload-pop' id='upload-form'>\r\n                        <div className=\"file-field input-field\">\r\n                            <div className=\"btn\">\r\n                                <input type=\"file\" id=\"image\" className=\"custom-file-input\" onChange={this.handleImageChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <progress className='progress' value={this.state.progress} />\r\n                        </div>\r\n                        <button\r\n                            onClick={this.handleUpload}\r\n                            className=\"upload-btn\"\r\n                            >\r\n                            Upload\r\n                        </button>\r\n                        <button type=\"button\" className=\"form-button\" onClick={this.closeForm}>Close</button>\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input  type=\"text\" id=\"title\" placeholder=\"Title\" onChange={this.handleChange} />\r\n                        <textarea className=\"smallPost\" id='content' onChange={this.handleChange} placeholder=\"Start writing your blog here!\"></textarea>\r\n                        { this.state.url ? <button className=\"form-button\" type=\"submit\">Create</button> : null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createBlog: (blog) => dispatch(createBlog(blog))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateBlog)","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../CSS/profile.css'\r\nimport CreateBlog from '../blogs/CreateBlog'\r\nimport BlogShowcase from '../blogs/BlogShowcase'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { editAbout } from '../../store/actions/authActions'\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    const [about, setAbout] = useState('')\r\n\r\n    const openForm = () => {\r\n        document.getElementById(\"about-form\").style.display = \"flex\";\r\n    }\r\n    const closeForm = () => {\r\n        document.getElementById(\"about-form\").style.display = \"none\";\r\n    }\r\n\r\n    const handleAbout = (e) => {\r\n        setAbout(e.target.value);\r\n        //console.log(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.editAbout(props.users, about);\r\n    }\r\n    \r\n    console.log(props);\r\n    const { blogs, users, auth } = props;\r\n\r\n    \r\n    if (!auth.uid) return <Redirect to='/login' />\r\n    const user = users && users.find(user =>{\r\n        \r\n        if(user.id == auth.uid){\r\n            //console.log(user.id)\r\n            return( \r\n            user\r\n        )\r\n        }\r\n    });\r\n    return (\r\n        \r\n        <div className=\"profile\">\r\n        <CreateBlog history={props.history}/>\r\n        <div className=\"userInfo\">\r\n            <div className=\"user\">\r\n                <Link to=\"\" ><img className='user-img' src={user && user.url || null} alt=\"\" /></Link>\r\n                <section>\r\n                    <p id=\"name\">{user && user.firstName || 'NA' } {user && user.lastName || 'NA'} </p>\r\n                    <p id=\"occupation\">{user && user.occupation || 'NA'}</p>\r\n                    <p id=\"email\">{auth.email}</p>\r\n                </section>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"prevPosts\">\r\n            <div className=\"topPosts\">\r\n                <p>Top Posts</p>\r\n            </div>\r\n\r\n            \r\n            <BlogShowcase  blogs = {blogs}/>\r\n        \r\n        </div>\r\n\r\n        <div className=\"userAbout\">\r\n            <div className=\"aboutMe\">\r\n                <section>\r\n                    <p id=\"aboutUser\">About Me:</p>\r\n                    <button className='edit-btn' onClick={openForm}>+</button>\r\n                    <p id=\"aboutMeText\">{user && user.about}</p>\r\n                </section>\r\n                <div className='about-pop' id='about-form'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <textarea type=\"text\" id=\"edit-text\" onChange={handleAbout} />\r\n                        <button type=\"Submit\" className=\"buttonBlue edit-form-button\">Update</button>\r\n                    </form>  \r\n                    <button type=\"button\" className=\"buttonBlue close-form-button\" onClick={closeForm}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        editAbout: (id,about) => dispatch(editAbout(id,about))\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n    blogs: state.firestore.ordered.blogs,\r\n    users: state.firestore.ordered.users,\r\n    auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'blogs' },\r\n        { collection: 'users'}\r\n    ])\r\n)(Profile)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nfunction Notifications(props) {\r\n    console.log(props)\r\n    const { auth, notificaitons } = props;\r\n    if(!auth.uid) return <Redirect to= '/login'/>\r\n    if (true) {\r\n        return (\r\n            <div className=\"notifications\">\r\n                <ul>\r\n                    { notificaitons && notificaitons.map(noti => {\r\n                        return(\r\n                            <li key={noti.id}>\r\n                                <span>{noti.user }</span>\r\n                                <span> { noti.content}</span>\r\n                                <div>\r\n                                    {moment(noti.time.toDate()).fromNow()}\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <p>Loading Project</p>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        notificaitons: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection:'notifications',limit:3, orderBy: ['time','desc']}\r\n    ])\r\n)(Notifications)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Homepage from './components/homepage/Homepage'\nimport BlogList from './components/blogs/BlogList'\nimport BlogContent from './components/blogs/BlogContent'\nimport Login from './components/auth/Login'\nimport SignUp from './components/auth/SignUp'\nimport Profile from './components/auth/Profile'\nimport Notifications from './components/homepage/Notifications'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <div className=\"background\">\n            <Navbar />\n            <Switch>\n              <Route exact path='/' component={Homepage} />\n              <Route exact path='/blogs/' component={BlogList} />\n              <Route path='/blogs/:id' component={BlogContent} />\n              <Route path='/login' component={Login} />\n              <Route path='/signup' component={SignUp} />\n              <Route path='/profile' component={Profile} />\n              <Route path='/notifications' component={Notifications} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return{\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login successs');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out success');\r\n            return state;\r\n        case 'SIGOUT_ERROR':\r\n            console.log('sign out failed');\r\n            return{\r\n                ...state,\r\n                authError: 'signout failed'\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup err')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'EDIT_ABOUT_SUCCESS':\r\n            console.log('edit about success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'EDIT_ABOUT_ERROR':\r\n            console.log('edit about err')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\n\r\nconst initState = {\r\n    blogs:[\r\n        {id: '1', title: 'live strong', content: 'hahahahahahah'},\r\n        {id: '2', title: 'fight strong', content: 'lol'},\r\n        {id: '3', title: 'score points', content: 'rofl'}\r\n\r\n    ]\r\n}\r\n\r\nconst blogReducer = (state = initState, action) => {\r\n    switch (action.type){\r\n        case 'CREATE_BLOG':\r\n            console.log('created blog', action.blog);\r\n            return state;\r\n        case 'CREATE_BLOG_ERROR':\r\n            console.log('create blog error', action.err);\r\n            return state;\r\n        case 'ADD_LIKE_SUCCESS':\r\n            console.log('liked something maybe');\r\n            return state;\r\n        case 'ADD_LIKE_ERROR':\r\n            console.log('dont know! a like error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default blogReducer","import authReducer from './authReducer'\r\nimport blogReducer from './blogReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    auth: authReducer,\r\n    blog: blogReducer\r\n});\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware} from 'redux' \nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport fbConfig from './config/fbConfig'\nimport firebase from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n\n    applyMiddleware(thunk.withExtraArgument({getFirebase}))\n\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n}\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n        return children\n}\n\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><AuthIsLoaded><App /></AuthIsLoaded></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}